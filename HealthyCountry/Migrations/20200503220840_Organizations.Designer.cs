// <auto-generated />
using System;
using HealthyCountry.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthyCountry.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200503220840_Organizations")]
    partial class Organizations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HealthyCountry.Models.Organization", b =>
                {
                    b.Property<string>("OrganizationId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Edrpou")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.HasKey("OrganizationId");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            OrganizationId = "org_1",
                            Address = "London 221B Baker Street",
                            Edrpou = "11111111",
                            Name = "Default Organization"
                        });
                });

            modelBuilder.Entity("HealthyCountry.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasColumnName("Password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .HasColumnName("Phone")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnName("Role")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TaxId")
                        .HasColumnName("TaxId")
                        .HasColumnType("varchar(10)");

                    b.HasKey("UserId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "d1b883f7-311a-4c18-983d-d22be046d9f7",
                            BirthDate = new DateTime(1000, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            Gender = "MALE",
                            LastName = "Adminovski",
                            MiddleName = "Adminovich",
                            OrganizationId = "org_1",
                            Password = "$2b$10$cJO36jbyw4/9vOitC1fitOPxKaIRIAzRbxdES/GE23Xk3hwfbmv5G",
                            Phone = "380505680632",
                            Role = "ADMIN",
                            TaxId = "11111111"
                        });
                });

            modelBuilder.Entity("HealthyCountry.Models.User", b =>
                {
                    b.HasOne("HealthyCountry.Models.Organization", "Organization")
                        .WithMany("Employees")
                        .HasForeignKey("OrganizationId");
                });
#pragma warning restore 612, 618
        }
    }
}
